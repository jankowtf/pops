% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_options.R
\name{init_package_options}
\alias{init_package_options}
\title{Initialize package options}
\usage{
init_package_options(
  pkg_name = pops:::pkg_name(),
  values = list(),
  prefix = pops:::options_prefix()
)
}
\arguments{
\item{pkg_name}{(\link{character}) Package name. This typically comes from the
\code{pkgname} argument of \code{.onLoad()} or \code{.onAttach()}}

\item{values}{(\link{list}) Optional values to set. You can also set them later
via \link{set_options}.}

\item{prefix}{(\link{character}) Prefix to be used for name of option environment.}
}
\value{

}
\description{
This creates/sets an \link{environment} in the global options that acts as an
"options container" for custom options/settings/preferences for your package.
}
\details{
This function is typically called within your custom \code{\link[=.onLoad]{.onLoad()}} or
\code{\link[=.onAttach]{.onAttach()}} function. Argument \code{values} lets you customize the actual
option values you want to set/create within the option environment.
}
\examples{
init_package_options(values = list(hello = "world", test = TRUE))
option_env_name <- options() \%>\% names() \%>\% stringr::str_subset("__.__")
option_env <- option_env_name \%>\% getOption()
option_env \%>\% ls()
option_env$hello

# Helper functions to access options inside the option environment
get_options()
get_options(c("hello")) # Always returns the actual option values wrapped into a list
get_option("hello") # Always returns the actual option value
}
